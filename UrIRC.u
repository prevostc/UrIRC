
/*
The porpose of this class is to hold all the UrIRC library.
Every library class will be an UrIRC slot.
By beeing a slot of Object, we make this lib accessible everywhere.

One problem of urbiscript classes is that you can't access a class inside another due to the protyped programming orientation.
Problem: 
	class A {};	// A is now a slot of Lobby
	
	class B {	// B is now a slot of Lobby
		var a = A.new	// lookup error, B does not provide an A slot
	};
Solution:
	class Object.Lib {};	// Lib is now a slot of Object
	
	class Lib.A {}; 	// A is now a slot of Lib

	class B {}
		var a = Lib.A.new;	// ok 
	;

While adding only one slot to Object, we are now able to access all the Lib classes.
*/
class Object.UrIRC {


};


/*
 * Load all plugins
 * Soon : autoload plugins
 * Urbi error in case of recursive require : NOTHING.
 * This is the reason of this "lib scale" require
 */
requireFile("UrBot.u");
requireFile("UrPlugin.u");
requireFile("UrSocket.u");
requireFile("plugins/UrChan.u");
requireFile("plugins/UrUser.u");
requireFile("plugins/UrPong.u");
requireFile("plugins/UrEventDispatcher.u");
requireFile("plugins/UrHelloWorld.u");
requireFile("plugins/UrParrot.u");
requireFile("plugins/UrAutoKick.u");
requireFile("plugins/UrQueryOnKick.u");

